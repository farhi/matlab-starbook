function [Long,Lat]=xy2sky_tan(FileName,X,Y,HDUnum)
%------------------------------------------------------------------------------
% xy2sky_tan function                                                 ImAstrom
% Description: Given a FITS image, SIM or a structure containing the FITS
%              WCS keyword (returned by fits_get_wcs.m), where the
%              WCS is represented using the tangential 
%              projection, convert X and Y position in the image to
%              longitude and latitude.
% Input  : - A string containing a FITS image name, SIM, or a structure
%            containing the FITS WCS keyword, returned by fits_get_wcs.m.
%          - Vector of X positions [pixel].
%          - Vector of Y positions [pixel].
%          - HDU number in FITS image from which to read the header.
%            Default is 1.
% Output : - Column vector of Longitudes [radian].
%          - Column vector of Latitude [radian].
% Tested : Matlab R2011b
%     By : Eran O. Ofek                    Nov 2012
%    URL : http://weizmann.ac.il/home/eofek/matlab/
% Example: [X,Y]=xy2sky_tan('File.fits',1,1);
%          % or:
%          WCS = get_fits_wcs('File.fits');
%          [X,Y]=xy2sky_tan(WCS,1,1);
%          % or:
%          Sim = images2sim('File.fits');
%          [X,Y]=xy2sky_tan(Sim,1,1);
% Reliable: 2
%------------------------------------------------------------------------------

RAD = 180./pi;


if (nargin==3),
    HDUnum = 1;
end


% deal with types of input
if (isstruct(FileName)),
    if (isfield(FileName,'CTYPE1')),
        % assume input is a WCS structure (generated by fits_get_wcs.m)
        WCS = FileName;
        CallGetWCS = false;
    else
        CallGetWCS = true;
    end
else
    CallGetWCS = true;
end

if (CallGetWCS),
    error('Not implemented')
    % WCS = fits_get_wcs(FileName,'HDUnum',HDUnum);
end


% transformation
if (~strcmp(WCS.CUNIT1,WCS.CUNIT2)),
     error('CUNIT1 must be identical to CUNIT2');
end

switch lower(WCS.CUNIT1)
    case {'deg','degree'}
       Factor = RAD;
    case 'rad'
       Factor = 1;
    otherwise
       error('Unknown CUNIT option');
end


if (size(X,2)==1),
   X = X.';
end
if (size(Y,2)==1),
   Y = Y.';
end

D = WCS.CD*[X - WCS.CRPIX1; Y - WCS.CRPIX2]; % + [WCS.CRVAL1; WCS.CRVAL2]
D = D./Factor;
DX = D(1,:);
DY = D(2,:);
[Long,Lat] = pr_ignomonic(DX.',DY.',[WCS.CRVAL1, WCS.CRVAL2]./Factor);

function [Long,Lat]=pr_ignomonic(X,Y,CenterVec);
%------------------------------------------------------------------------------
% pr_ignomonic function                                               AstroMap
% Description: Project coordinates (X and Y) using the
%              inverse Gnomonic non conformal projection,
% Input  : - Vector of X, in radians.
%          - Vector of Y, in radians.
%          - Central coordinate vector [Long_center,Lat_center],
% Output : - Vector of longitude in radians.
%          - Vector of latitude in radians.
% Tested : Matlab 5.3
%     By : Eran O. Ofek                      June 2005
%    URL : http://wise-obs.tau.ac.il/~eran/matlab.html
% See also: pr_gnomonic.m
% Reliable: 2
%------------------------------------------------------------------------------

Rho   = sqrt(X.^2+Y.^2);
C     = atan(Rho);

Long1 = CenterVec(1);
Lat1  = CenterVec(2);

if (Rho==0),
   Lat = Lat1;
   Long = Long1;
else
   Lat   = asin(cos(C).*sin(Lat1) + Y.*sin(C).*cos(Lat1)./Rho);
   Long  = Long1 + atan(X.*sin(C)./(Rho.*cos(Lat1).*cos(C) - Y.*sin(Lat1).*sin(C)));
end

